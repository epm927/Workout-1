nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
sink("../output/efficiency-summary.txt", append = TRUE)  #send it away
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
sink("../output/efficiency-summary.txt", append = TRUE)  #send it away
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
sink("../output/efficiency-summary.txt", append = FALSE)  #send it away
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
sink("../output/efficiency-summary.txt", append = FALSE)  #send it away
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
sink("../output/efficiency-summary.txt", append = FALSE)  #send it away
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
sink("../output/efficiency-summary.txt", append = TRUE)  #send it away
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
sink("../output/efficiency-summary.txt", append = FALSE)  #send it away
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
sink("../output/efficiency-summary.txt", append = TRUE)  #send it away
nba.data$experience
sum(nba.data$experience)
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
sink("../output/efficiency-summary.txt", append = TRUE)  #send it away
####################################
#### Creating nba2018-teams.csv ####
####################################
teams_raw <- data.frame(
team = "GSW",
experience = sum(nba.data$experience[team == "GSW"]),
salary = sum(nba.data$salary[team == "GSW"])
)
# teams_raw[i] <- nba.data$team[i,3]
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
sink("../output/efficiency-summary.txt", append = TRUE)  #send it away
####################################
#### Creating nba2018-teams.csv ####
####################################
teams_raw <- data.frame(
team = "GSW",
experience = sum(nba.data$experience[team == "GSW"]),
salary = sum(nba.data$salary[team == "GSW"])
)
teams_raw
# teams_raw[i] <- nba.data$team[i,3]
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
# sink("../output/efficiency-summary.txt", append = TRUE)  #send it away
####################################
#### Creating nba2018-teams.csv ####
####################################
teams_raw <- data.frame(
team = "GSW",
experience = sum(nba.data$experience[team == "GSW"]),
salary = sum(nba.data$salary[team == "GSW"])
)
teams_raw
# teams_raw[i] <- nba.data$team[i,3]
teams_raw
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
# sink("../output/efficiency-summary.txt", append = TRUE)  #send it away
####################################
#### Creating nba2018-teams.csv ####
####################################
teams_raw <- data.frame(
team = "GSW",
experience = sum(nba.data$experience[team == "GSW"]),
salary = sum(nba.data$salary[team == "GSW"])
)
summary(teams_raw)
# teams_raw[i] <- nba.data$team[i,3]
nba.data
## Title: Short Title
# This is the code involved with preprocessing the data.
# Inputs:
# Outputs:
setwd("Desktop/stat133-hws-fall18/workout1/code")
library(readr)
library(plyr)
library(dplyr)
nba.data <- read_csv("../data/nba2018.csv", col_types = cols(
experience= col_character(),
position = col_factor(c('C', 'PF', 'PG', 'SF', 'SG'))
))
# Replace all `R`'s in `experience` with 0's, then convert to type `integer`:
i = 1
while(i <= length(nba.data$experience)){
if(nba.data$experience[i] == "R"){
nba.data$experience[i] <- 0
i <- i+1
} else{
nba.data$experience[i] <- nba.data$experience[i]
i <- i+1
}
}
nba.data$experience <- as.integer(nba.data$experience)
# Displaying salaries in millions of dollars:
nba.data$salary <- nba.data$salary / (10^6)
# Relabelling levels of `position`:
nba.data$position <- revalue(nba.data$position, c("C" = "center", "PF" = "power_fwd","PG" = "point_guard","SF" = "small_fwd","SG" = "shoot_guard"))
# Adding new columns:
nba.data$missed_fg = nba.data$field_goals_atts - nba.data$field_goals
nba.data$missed_ft = nba.data$points1_atts - nba.data$points1
nba.data$rebounds = nba.data$off_rebounds + nba.data$def_rebounds
nba.data$efficiency = (nba.data$points + nba.data$rebounds + nba.data$assists +  nba.data$steals + nba.data$blocks - nba.data$missed_fg - nba.data$missed_ft - nba.data$turnovers )/nba.data$games
# Sending the efficiencies away
summary(nba.data$efficiency)  #display the summary
####################################
#### Creating nba2018-teams.csv ####
####################################
teams_raw <- data.frame(
team = "GSW",
experience = sum(nba.data$experience[team == "GSW"]),
salary = sum(nba.data$salary[team == "GSW"])
)
summary(teams_raw)
# teams_raw[i] <- nba.data$team[i,3]
